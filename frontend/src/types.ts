/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/v1/application_secrets": {
    get: {
      parameters: {
        query: {
          application_id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["ApplicationSecret"][];
        };
        /** Forbidden */
        403: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          body: definitions["ApplicationSecretPost"];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["ApplicationSecret"];
        };
        /** Bad Request */
        400: unknown;
        /** Forbidden */
        403: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
  };
  "/api/v1/application_secrets/{application_secret_token}": {
    put: {
      parameters: {
        path: {
          application_secret_token: string;
        };
        body: {
          body: definitions["ApplicationSecretPost"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["ApplicationSecret"];
        };
        /** Bad Request */
        400: unknown;
        /** Forbidden */
        403: unknown;
        /** Not Found */
        404: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
    delete: {
      parameters: {
        path: {
          application_secret_token: string;
        };
        query: {
          application_id: string;
        };
      };
      responses: {
        /** No Content */
        204: never;
        /** Forbidden */
        403: unknown;
        /** Not Found */
        404: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
  };
  "/api/v1/applications": {
    get: {
      parameters: {
        query: {
          organization_id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Application"][];
        };
        /** Forbidden */
        403: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          body: definitions["ApplicationPost"];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["Application"];
        };
        /** Bad Request */
        400: unknown;
        /** Forbidden */
        403: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
  };
  "/api/v1/applications/{application_id}": {
    get: {
      parameters: {
        path: {
          application_id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Application"];
        };
        /** Forbidden */
        403: unknown;
        /** Not Found */
        404: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
    put: {
      parameters: {
        path: {
          application_id: string;
        };
        body: {
          body: definitions["ApplicationPost"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Application"];
        };
        /** Bad Request */
        400: unknown;
        /** Forbidden */
        403: unknown;
        /** Not Found */
        404: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
    delete: {
      parameters: {
        path: {
          application_id: string;
        };
      };
      responses: {
        /** No Content */
        204: never;
        /** Forbidden */
        403: unknown;
        /** Not Found */
        404: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
  };
  "/api/v1/event": {
    post: {
      parameters: {
        body: {
          body: definitions["EventPost"];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["IngestedEvent"];
        };
        /** Bad Request */
        400: unknown;
        /** Forbidden */
        403: unknown;
        /** Conflict */
        409: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
  };
  "/api/v1/event_types": {
    get: {
      parameters: {
        query: {
          application_id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["EventType"][];
        };
        /** Forbidden */
        403: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          body: definitions["EventTypePost"];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["EventType"];
        };
        /** Bad Request */
        400: unknown;
        /** Forbidden */
        403: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
  };
  "/api/v1/event_types/{event_type_name}": {
    get: {
      parameters: {
        path: {
          event_type_name: string;
        };
        query: {
          application_id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["EventType"];
        };
        /** Forbidden */
        403: unknown;
        /** Not Found */
        404: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
    delete: {
      parameters: {
        path: {
          event_type_name: string;
        };
        query: {
          application_id: string;
        };
      };
      responses: {
        /** No Content */
        204: never;
        /** Forbidden */
        403: unknown;
        /** Not Found */
        404: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
  };
  "/api/v1/events": {
    get: {
      parameters: {
        query: {
          application_id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Event"][];
        };
        /** Forbidden */
        403: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
  };
  "/api/v1/events/{event_id}": {
    get: {
      parameters: {
        path: {
          event_id: string;
        };
        query: {
          application_id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["EventWithPayload"];
        };
        /** Forbidden */
        403: unknown;
        /** Not Found */
        404: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
  };
  "/api/v1/organizations": {
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions["Organization"][];
        };
        /** Forbidden */
        403: unknown;
        /** Internal Server Error */
        500: unknown;
      };
    };
  };
}

export interface definitions {
  Application: {
    application__id: string;
    name: string;
    organization__id: string;
  };
  ApplicationPost: {
    name: string;
    organization_id: string;
  };
  ApplicationSecret: {
    created_at: string;
    deleted_at?: string;
    name?: string;
    token: string;
  };
  ApplicationSecretPost: {
    application_id: string;
    name?: string;
  };
  Event: {
    application_secret__token: string;
    event__id: string;
    event_type__name: string;
    ip: string;
    labels: { [key: string]: any };
    metadata?: { [key: string]: any };
    occurred_at: string;
    payload_content_type__name: string;
    received_at: string;
  };
  EventPost: {
    application_id: string;
    application_secret: string;
    event_id: string;
    event_type: string;
    labels: { [key: string]: any };
    metadata?: { [key: string]: any };
    occurred_at: string;
    payload: string;
    payload_content_type: string;
  };
  EventType: {
    event_type__name: string;
    resource_type__name: string;
    service__name: string;
    verb__name: string;
  };
  EventTypePost: {
    application_id: string;
    resource_type: string;
    service: string;
    verb: string;
  };
  EventWithPayload: {
    application_secret__token: string;
    event__id: string;
    event_type__name: string;
    ip: string;
    labels: { [key: string]: any };
    metadata?: { [key: string]: any };
    occurred_at: string;
    payload: string;
    payload_content_type__name: string;
    received_at: string;
  };
  IngestedEvent: {
    application__id: string;
    event__id: string;
    received_at: string;
  };
  Organization: {
    organization__id: string;
    role: string;
  };
}

export interface operations {}
