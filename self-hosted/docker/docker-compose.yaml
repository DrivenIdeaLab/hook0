version: '3.8'
name: hook0

volumes:
  postgres-data:
  postgres-keycloak-data:
  keycloak-keys:

services:
  postgres:
    image: postgres:15
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hook0
    ports:
      - "5432:5432"
    networks:
      - hook0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d $${POSTGRES_DB}"]
      timeout: 1s
      interval: 5s

  postgres-keycloak:
    image: postgres:15
    volumes:
      - postgres-keycloak-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=keycloak
    ports:
      - "5433:5432"
    networks:
      - hook0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d $${POSTGRES_DB}"]
      timeout: 1s
      interval: 5s

  keycloak:
    build:
      context: ../..
      dockerfile: self-hosted/docker/keycloak.Dockerfile
    volumes:
      - keycloak-keys:/opt/keycloak-keys
    environment:
      - KC_DB_URL=jdbc:postgresql://postgres-keycloak:5432/keycloak?user=postgres&password=postgres
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_REALM=hook0
    user: root
    ports:
      - "8080:8080"
    networks:
      - hook0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health/live || exit 1"]
      timeout: 3s
      start_period: 40s
      start_interval: 40s
      interval: 5s
    depends_on:
      postgres-keycloak:
        condition: service_healthy

  api:
    build:
      context: ../..
      dockerfile: self-hosted/docker/api.Dockerfile
    volumes:
      - keycloak-keys:/opt/keycloak-keys:ro
    environment:
      - IP=0.0.0.0
      - PORT=8081
      - CORS_ALLOWED_ORIGINS=http://localhost:8001
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/hook0
      - KEYCLOAK_URL=http://keycloak:8080/
      - KEYCLOAK_REALM=hook0
      - KEYCLOAK_CLIENT_ID=hook0-api
      - KEYCLOAK_FRONT_CLIENT_ID=hook0
    ports:
      - "8081:8081"
    networks:
      - hook0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --user-agent 'docker-compose-healthcheck' http://localhost:$${PORT}/api/v1/swagger.json || exit 1"]
      timeout: 1s
      interval: 5s
    depends_on:
      keycloak:
        condition: service_healthy
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ../..
      dockerfile: self-hosted/docker/frontend.Dockerfile
    volumes:
      - ./frontend/keycloak.json:/data/keycloak.json:ro
    ports:
      - "8001:80"
    networks:
      - hook0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost || exit 1"]
      timeout: 1s
      interval: 5s
    depends_on:
      keycloak:
        condition: service_healthy
      api:
        condition: service_healthy

  output-worker:
    build:
      context: ../..
      dockerfile: self-hosted/docker/output-worker.Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/hook0
      - WORKER_NAME=default
      - DISABLE_TARGET_IP_CHECK=true
    networks:
      - hook0
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_healthy

networks:
  hook0:
    driver: bridge
