variables:
  PG_VERSION: "14"
  RUST_VERSION: "1.57"
  NODE_VERSION: "14"
  POSTGRES_DB: hook0-ci
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST_AUTH_METHOD: trust

stages:
  - build
  - test
  - release

rust.check:
  stage: test
  image: rust:$RUST_VERSION
  only:
    changes:
      - api/**/*
      - output-worker/**/*
      - sentry-integration/**/*
      - Cargo.*
  services:
    - postgres:$PG_VERSION
  before_script:
    - rustc --version && cargo --version
    - rustup component add clippy
    - rustup component add rustfmt
  script:
    # Global
    - cargo fmt --all -- --check
    # Sentry integration
    - pushd sentry-integration
    - cargo clippy --all-targets --all-features -- -D warnings
    - cargo test
    - popd
    # Init DB schema
    - cargo install sqlx-cli --no-default-features --features postgres --locked
    - pushd api
    - echo "DATABASE_URL=\"postgresql://$POSTGRES_USER@postgres/$POSTGRES_DB\"" > .env
    - sqlx migrate run
    - popd
    # API
    - pushd api
    - echo "DATABASE_URL=\"postgresql://$POSTGRES_USER@postgres/$POSTGRES_DB\"" > .env
    - cargo clippy --all-targets --all-features -- -D warnings -A clippy::field-reassign-with-default # paperclip macros trigger clippy...
    - cargo test
    - popd
    # Output Worker
    - pushd output-worker
    - echo "DATABASE_URL=\"postgresql://$POSTGRES_USER@postgres/$POSTGRES_DB\"" > .env
    - cargo clippy --all-targets --all-features -- -D warnings
    - cargo test

include:
  - local: 'frontend/.gitlab-ci.yml'
  - local: 'website/.gitlab-ci.yml'
